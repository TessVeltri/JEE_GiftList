/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2023-01-04 13:33:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.JSP;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import be.veltri.ENUMS.EnumStatusList;
import java.util.ArrayList;
import be.veltri.JAVABEANS.*;
import java.util.Base64;

public final class AddList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("be.veltri.JAVABEANS");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Base64");
    _jspx_imports_classes.add("be.veltri.ENUMS.EnumStatusList");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "Les JSPs ne permettent que GET, POST ou HEAD. Jasper permet aussi OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Add a list</title>\r\n");
      out.write("<link href=\"/Veltri_GiftList/CSS/infoListCSS.css\" rel=\"stylesheet\"\r\n");
      out.write("	type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Header.jsp", out, false);
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("	margin-left: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".child {\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	vertical-align: middle;\r\n");
      out.write("	width: 30%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form {\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btnSubmit {\r\n");
      out.write("	margin-top: 30px;\r\n");
      out.write("	font-size: 17px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");

GiftList gl = (GiftList) request.getSession().getAttribute("addList");
if (gl == null) {
	User u = null;
	gl = new GiftList("", "", "", EnumStatusList.Active, true, u);
}
ArrayList<Gift> lstGifts = gl.getLstGift();
String checked;
String disabled;
String disabledBtn = "disabled";
String hideTxt = "";
if (gl.isActive()) {
	checked = "checked";
	disabled = "disabled";
} else {
	checked = "";
	disabled = "";
}

      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<h1>Add List</h1>\r\n");
      out.write("	<form action=\"verifAddList\" method=\"POST\">\r\n");
      out.write("		<div class=\"form\">\r\n");
      out.write("			<b>Name of the list : </b><input type=\"text\" name=\"nameList\"\r\n");
      out.write("				id=\"nameList\" value=\"");
      out.print(gl.getNameList());
      out.write("\" required />\r\n");
      out.write("		</div>\r\n");
      out.write("		<div>\r\n");
      out.write("			<div class=\"form child\">\r\n");
      out.write("				<b>Date : </b><input type=\"date\" name=\"limitDate\" id=\"limitDate\"\r\n");
      out.write("					value=\"");
      out.print(gl.getLimitDate());
      out.write('"');
      out.write(' ');
      out.print(disabled);
      out.write(" />\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form child\">\r\n");
      out.write("				<b>Active/Inactive mode : </b><input type=\"checkbox\" name=\"isActive\"\r\n");
      out.write("					id=\"isActive\" onclick=\"checkClick()\" ");
      out.print(checked);
      out.write(" required />\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div>\r\n");
      out.write("			<b>Occasion : </b><select name=\"occasion\" id=\"occasion\">\r\n");
      out.write("				<option value=\"wedding\">Wedding</option>\r\n");
      out.write("				<option value=\"baptism\">Baptism</option>\r\n");
      out.write("				<option value=\"bacheloretteParty\">Bachelorette Party</option>\r\n");
      out.write("				<option value=\"bachelorParty\">Bachelor Party</option>\r\n");
      out.write("				<option value=\"babyShower\">Baby Shower</option>\r\n");
      out.write("				<option value=\"other\">Other</option>\r\n");
      out.write("			</select>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div>\r\n");
      out.write("			<h3>\r\n");
      out.write("				<em>Gifts:</em>\r\n");
      out.write("			</h3>\r\n");
      out.write("			<table>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>Image</th>\r\n");
      out.write("					<th>Gift Name</th>\r\n");
      out.write("					<th>Gift Description</th>\r\n");
      out.write("					<th>Price</th>\r\n");
      out.write("					<th>Priority</th>\r\n");
      out.write("					<th>Website</th>\r\n");
      out.write("					<th>Status</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("				");

				int index = 0;
				for (Gift g : lstGifts) {

					String b64 = "";

					String image = "";

					if (g.getImage() != null && g.getImage().length != 0) {
						b64 = Base64.getEncoder().encodeToString(g.getImage());
						image = "data:image/" + g.getExtensionImage() + ";base64,";
						image += b64;
					}
				
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>\r\n");
      out.write("						");

						if (g.getImage() != null && g.getImage().length != 0) {
						
      out.write(" <img src=\"");
      out.print(image);
      out.write("\" width=\"50px\" height=\"50px\"></img> ");

 }
 
      out.write("\r\n");
      out.write("					</td>\r\n");
      out.write("					<td>");
      out.print(g.getName());
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(g.getDescription());
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(g.getAveragePrice());
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(g.getPriority().toString());
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(g.getWebsiteLink());
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(g.getStatusGift().toString());
      out.write("</td>\r\n");
      out.write("					<td><button type=\"button\" class=\"btn child\"\r\n");
      out.write("							onclick=\"location.href='/Veltri_GiftList/modifyGift?idGift=");
      out.print(index);
      out.write("&where=local'\">\r\n");
      out.write("							<img width=\"25px\" height=\"25px\"\r\n");
      out.write("								src=\"/Veltri_GiftList/IMG/pen.png\"></img>\r\n");
      out.write("						</button></td>\r\n");
      out.write("					<td><button type=\"button\" class=\"btn child\"\r\n");
      out.write("							onclick=\"location.href='/Veltri_GiftList/addList?idGift=");
      out.print(index);
      out.write("'\">\r\n");
      out.write("							<img width=\"25px\" height=\"25px\"\r\n");
      out.write("								src=\"/Veltri_GiftList/IMG/delete.png\"></img>\r\n");
      out.write("						</button></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				");

				index++;
				}
				
      out.write("\r\n");
      out.write("			</table>\r\n");
      out.write("\r\n");
      out.write("			<button type=\"button\" id=\"addGift\" onclick=\"addGiftBtn()\">\r\n");
      out.write("				<img width=\"30px\" height=\"30px\" src=\"/Veltri_GiftList/IMG/plus.png\"></img>\r\n");
      out.write("			</button>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div align=\"center\">\r\n");
      out.write("			<h4>\r\n");
      out.write("				<em>You can add participants after create the list.</em>\r\n");
      out.write("			</h4>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		");

		if (lstGifts.size() > 0) {
			disabledBtn = "";
			hideTxt = "display:none;";
		}
		
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<div align=\"right\">\r\n");
      out.write("			<button type=\"submit\" class=\"btnSubmit\" ");
      out.print(disabledBtn);
      out.write(">Send</button>\r\n");
      out.write("			<p id=\"infoTxt\" style=\"font-size:12px;");
      out.print(hideTxt);
      out.write("\">To create a\r\n");
      out.write("				list, you must add at least one gift.</p>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("	</form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Footer.jsp", out, false);
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	const isActive = document.getElementById(\"isActive\");\r\n");
      out.write("	const date = document.getElementById(\"limitDate\");\r\n");
      out.write("	const nameList = document.getElementById(\"nameList\");\r\n");
      out.write("	const occasion = document.getElementById(\"occasion\");\r\n");
      out.write("\r\n");
      out.write("	function checkClick() {\r\n");
      out.write("		if (date.disabled == true) {\r\n");
      out.write("			date.disabled = false;\r\n");
      out.write("			date.required = true;\r\n");
      out.write("			isActive.required = false;\r\n");
      out.write("		} else {\r\n");
      out.write("			date.disabled = true;\r\n");
      out.write("			date.value = \"\";\r\n");
      out.write("			date.required = false;\r\n");
      out.write("			isActive.required = true;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	function addGiftBtn() {\r\n");
      out.write("		window.location.href = '/Veltri_GiftList/addGift?nameList='\r\n");
      out.write("				+ nameList.value + '&limitDate=' + date.value + '&isActive='\r\n");
      out.write("				+ isActive.value + '&occasion=' + occasion.value;\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
