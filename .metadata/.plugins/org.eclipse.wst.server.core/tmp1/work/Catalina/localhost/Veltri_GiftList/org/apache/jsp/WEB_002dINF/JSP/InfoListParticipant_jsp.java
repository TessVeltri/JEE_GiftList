/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2023-01-06 16:58:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.JSP;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import be.veltri.JAVABEANS.Reserve;
import java.util.Base64;
import be.veltri.JAVABEANS.Gift;
import be.veltri.JAVABEANS.GiftList;
import java.util.ArrayList;

public final class InfoListParticipant_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("be.veltri.JAVABEANS.Reserve");
    _jspx_imports_classes.add("java.util.Base64");
    _jspx_imports_classes.add("be.veltri.JAVABEANS.GiftList");
    _jspx_imports_classes.add("be.veltri.JAVABEANS.Gift");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "Les JSPs ne permettent que GET, POST ou HEAD. Jasper permet aussi OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Info about a list</title>\r\n");
      out.write("<link href=\"/Veltri_GiftList/CSS/infoListCSS.css\" rel=\"stylesheet\"\r\n");
      out.write("	type=\"text/css\">\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Header.jsp", out, false);
      out.write("\r\n");
      out.write("</head>\r\n");

String error = (String) request.getAttribute("error");
GiftList gl = (GiftList) session.getAttribute("giftList");

      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<h2>\r\n");
      out.write("		List :\r\n");
      out.write("		");
      out.print(gl.getNameList());
      out.write("</h2>\r\n");
      out.write("\r\n");
      out.write("	<h4>\r\n");
      out.write("		<u>Occasion :</u>\r\n");
      out.write("		");
      out.print(gl.getOccasion());
      out.write("\r\n");
      out.write("	</h4>\r\n");
      out.write("	");

	if (gl.isActive()) {
	
      out.write("\r\n");
      out.write("	<h4>");
      out.print(gl.getStatusList().toString());
      out.write("</h4>\r\n");
      out.write("	");

	} else {
	// false -> afficher la date
	
      out.write("\r\n");
      out.write("	<h4>\r\n");
      out.write("		<div id=\"getDate\" style=\"display: block;\">\r\n");
      out.write("			<div class=\"child\">Date :</div>\r\n");
      out.write("			<div id=\"limitDate\" class=\"child\">");
      out.print(gl.getLimitDate());
      out.write("</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</h4>\r\n");
      out.write("	");

	}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div>\r\n");
      out.write("		<div align=\"right\">\r\n");
      out.write("			<ul>\r\n");
      out.write("				");

				if (error != null && !error.equals("")) {
				
      out.write("\r\n");
      out.write("				<li style=\"color: red;\">");
      out.print(error);
      out.write("</li>\r\n");
      out.write("				");

				}
				
      out.write("\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("		<h3 align=\"center\">\r\n");
      out.write("			<em><u>All gifts</u></em>\r\n");
      out.write("		</h3>\r\n");
      out.write("		<table>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>Image</th>\r\n");
      out.write("				<th>Gift Name</th>\r\n");
      out.write("				<th>Gift Description</th>\r\n");
      out.write("				<th>Price</th>\r\n");
      out.write("				<th>Priority</th>\r\n");
      out.write("				<th>Website</th>\r\n");
      out.write("				<th>Status</th>\r\n");
      out.write("				<th>Reserves</th>\r\n");
      out.write("			</tr>\r\n");
      out.write("			");

			for (Gift g : gl.getLstGift()) {
				String b64 = "";

				String image = "";

				if (g.getImage() != null && g.getImage().length != 0) {
					b64 = Base64.getEncoder().encodeToString(g.getImage());
					image = "data:image/" + g.getExtensionImage() + ";base64,";
					image += b64;
				}
			
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>\r\n");
      out.write("					");

					if (g.getImage() != null && g.getImage().length != 0) {
					
      out.write(" <img src=\"");
      out.print(image);
      out.write("\" width=\"80px\" height=\"50px\"></img> ");

 }
 
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("				<td>");
      out.print(g.getName());
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(g.getDescription());
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(g.getAveragePrice());
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(g.getPriority().toString());
      out.write("</td>\r\n");
      out.write("				");

				if (g.getWebsiteLink() != null) {
				
      out.write("\r\n");
      out.write("				<td><a href=\"");
      out.print(g.getWebsiteLink());
      out.write("\">Link</a></td>\r\n");
      out.write("				");

				} else {
				
      out.write("\r\n");
      out.write("				<td>-</td>\r\n");
      out.write("				");

				}
				
      out.write("\r\n");
      out.write("				<td>");
      out.print(g.getStatusGift().toString());
      out.write("</td>\r\n");
      out.write("				<td>\r\n");
      out.write("					");

					for (Reserve r : g.getLstReserve()) {
					
      out.write(' ');
      out.print(r.getAmount());
      out.write(' ');
      out.write('â‚¬');
      out.write('/');
      out.print(r.getUser().getFirstname());
      out.write(' ');
      out.print(r.getUser().getName());
      out.write("\r\n");
      out.write("					");

					}
					
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("				<td><button type=\"button\" class=\"btn child\"\r\n");
      out.write("						onclick=\"location.href='/Veltri_GiftList/addReserve?idGift=");
      out.print(g.getIdGift());
      out.write("'\">\r\n");
      out.write("						<img width=\"65px\" height=\"30px\"\r\n");
      out.write("							src=\"/Veltri_GiftList/IMG/reserve.png\"></img>\r\n");
      out.write("					</button></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			");

			}
			
      out.write("\r\n");
      out.write("		</table>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Footer.jsp", out, false);
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
